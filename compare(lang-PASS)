# -*- coding: utf-8 -*-
import pandas as pd
import csv
import numpy as np
import re
import os
import fnmatch
from datetime import datetime

work_dir = '/Users/DickersonLab/Desktop/'
os.chdir(work_dir)

def find(pattern, path):
    result = []
    for root, dirs, files in os.walk(path):
        for name in files:
            if fnmatch.fnmatch(name, pattern):
                result.append(os.path.join(root, name))
    return result

lang_file = work_dir + 'PPA_Master_spreadsheet_050117.xlsx'
lang = pd.read_excel(lang_file, 'lang data', encoding='utf-8')
lang['name'] = lang['lname'] + '_'+ lang['fname']
lang_df = lang[['name','testing date1','testing date2',
                    'testing date3','testing date4','testing date5',
                    'testing date6','Testing date 7']]
lang_dates = lang_df
lang_dates['#-lang'] = lang_dates.iloc[:,1:].count(1)

PASS_file = work_dir + 'PPA_Master_spreadsheet_050117.xlsx'
PASS = pd.read_excel(PASS_file, 'pass ratings', encoding='utf-8')
PASS['name'] = PASS['lname'] + '_'+ PASS['fname']
PASS_df = PASS[['name','PASS date 1','PASS date 2',
                    'PASS date 3','PASS date 4','PASS date 5',
                    'PASS date 6','PASS date 7', 'PASS date 8',
                    'PASS date 9','PASS date 10']]
PASS_dates = PASS_df
PASS_dates['#-PASS'] = PASS_dates.iloc[:,1:].count(1)

match = pd.merge(lang_dates, PASS_dates, on=['name'], how='outer')
match = match.applymap(str)

match['testing date1'] = match['testing date1'].map(lambda x: str(x)[:-8])
match['testing date2'] = match['testing date2'].map(lambda x: str(x)[:-8])
match['testing date3'] = match['testing date3'].map(lambda x: str(x)[:-8])
match['testing date4'] = match['testing date4'].map(lambda x: str(x)[:-8])
match['testing date5'] = match['testing date5'].map(lambda x: str(x)[:-8])
match['testing date6'] = match['testing date6'].map(lambda x: str(x)[:-8])
match['Testing date 7'] = match['Testing date 7'].map(lambda x: str(x)[:-8])

match['PASS date 1'] = match['PASS date 1'].map(lambda x: str(x)[:-8])
match['PASS date 2'] = match['PASS date 2'].map(lambda x: str(x)[:-8])
match['PASS date 3'] = match['PASS date 3'].map(lambda x: str(x)[:-8])
match['PASS date 4'] = match['PASS date 4'].map(lambda x: str(x)[:-8])
match['PASS date 5'] = match['PASS date 5'].map(lambda x: str(x)[:-8])
match['PASS date 6'] = match['PASS date 6'].map(lambda x: str(x)[:-8])
match['PASS date 7'] = match['PASS date 7'].map(lambda x: str(x)[:-8])
match['PASS date 8'] = match['PASS date 8'].map(lambda x: str(x)[:-8])
match['PASS date 9'] = match['PASS date 9'].map(lambda x: str(x)[:-8])
match['PASS date 10'] = match['PASS date 10'].map(lambda x: str(x)[:-8])

total_error = []
compare = []
for i in match.index:
    error = []
    if match['#-lang'][i] == match['#-PASS'][i]:
        compare.append('Good')
    else:
        compare.append('#Langâ‰ #Pass')
    test1 = match.ix[i].str.count(match.loc[i]['testing date1'])
    test2 = match.ix[i].str.count(match.loc[i]['testing date2'])
    test3 = match.ix[i].str.count(match.loc[i]['testing date3'])
    test4 = match.ix[i].str.count(match.loc[i]['testing date4'])
    test5 = match.ix[i].str.count(match.loc[i]['testing date5'])
    test6 = match.ix[i].str.count(match.loc[i]['testing date6'])
    test7 = match.ix[i].str.count(match.loc[i]['Testing date 7'])
    if sum(test1) < 2:
        error.append(match.loc[i]['testing date1'])
    if sum(test2) < 2:
        error.append(match.loc[i]['testing date2'])
    if sum(test3) < 2:
        error.append(match.loc[i]['testing date3'])
    if sum(test4) < 2:
        error.append(match.loc[i]['testing date4'])
    if sum(test5) < 2:
        error.append(match.loc[i]['testing date5'])
    if sum(test6) < 2:
        error.append(match.loc[i]['testing date6'])
    if sum(test7) < 2:
        error.append(match.loc[i]['Testing date 7'])
    if len(error) == 0:
        error.append('none')
    total_error.append(error)
        
match['Lang-PASS'] = compare
match['error'] = total_error

match.to_csv('test.csv', encoding='utf-8')
